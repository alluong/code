1. What is the processing order of the nodes?

In the example above, we start from the root node A. Firstly, we choose the path to the node B and trace-back til we reach the node E
where we have no way to go deeper. Then we backtrack to A and choose the second path to the node C. From C, We try the first path to E
but E has been visited. So we go back to C and try another path to F. Finally, we find G.

Overall, we only trace-back and try another path after we reach the deepest node.

As a result, the first path you found in DFS is not always the shortest path. For instance, in the example above, we successfully found
a path A->C->F->G and stop the DFS. But this is not the shortest path from A to G.

2. What is the push and pop order of the stack?

As shown in the animation above, we first push the root node to the stack; then we try the first neighbor B and push node B to the stack;
so on and so forth. When we reach the deepest node E, we need to trace back. And when we trace back, we will pop the deepest node from
the stack which is actually the last node pushed to the stack.

The processing order of the nodes is the exact opposite order as how they were added to the stack, which is Last-in-First-out (LIFO).
That's why we use a stack in DFS.
